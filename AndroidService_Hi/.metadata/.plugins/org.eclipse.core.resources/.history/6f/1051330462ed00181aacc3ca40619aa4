package servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import entity.User;

import service.UserService;
import socket.MySocketServ;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

public class UserServlet extends HttpServlet {
	
	private UserService userService=new UserService();

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doPost(request,response);
	}

	
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
		String action=request.getParameter("action");
		
		if("login".equals(action)){
			login(request,response);
		}else if("getFriends".equals(action)){
			getFriends(request,response);
		}else if("register".equals(action)){
			register(request,response);
		}else if("hasUser".equals(action)){
			hasUser(request,response);
		}else if("searchFriends".equals(action)){
			searchFriends(request,response);
		}else if("getOneUser".equals(action)){
			getOneUser(request,response);
		}else if("addFriendAsk".equals(action)){
			addFriendAsk(request,response);
		}
	}
	
	


	private void addFriendAsk(HttpServletRequest request,
			HttpServletResponse response) {
		String uid=request.getParameter("uid");
		String fid=request.getParameter("fid");
		
		userService.addFriendAsk(uid,fid);
		
		
	}


	private void getOneUser(HttpServletRequest request,
			HttpServletResponse response) {
		String id=request.getParameter("id");
		JSONObject jsonObject=userService.getOneUser(id);
		try {
			response.getWriter().write(jsonObject.toString());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}


	private void searchFriends(HttpServletRequest request,
			HttpServletResponse response) {
		String username=request.getParameter("username");
		JSONArray jsonArray=userService.searchFriends(username);
		System.out.println(jsonArray.toString());
		try {
			response.getWriter().write(jsonArray.toString());
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}


	private void hasUser(HttpServletRequest request,
			HttpServletResponse response) {
		String username=request.getParameter("username");
		
		boolean flag= userService.hasUser(username);
		try {
			if(flag){
				
				response.getWriter().write("y");
				
			}else{
				response.getWriter().write("n");
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}


	private void register(HttpServletRequest request,
			HttpServletResponse response) {
		String username=request.getParameter("username");
		String password=request.getParameter("password");
		String email=request.getParameter("email");
		String phone=request.getParameter("phone");
		
		User user=new User();
		user.setUsername(username);
		user.setPassword(password);
		user.setEmail(email);
		user.setPhone(phone);
		boolean flag= userService.register(user);
		try {
			if(flag){
				
				response.getWriter().write("y");
				
			}else{
				response.getWriter().write("n");
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}


	private void getFriends(HttpServletRequest request,
			HttpServletResponse response) {
		String id=request.getParameter("id");
		JSONObject jsonObject=userService.getFriendsJson(id);
		try {
			response.getWriter().write(jsonObject.toString());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}


	private void login(HttpServletRequest request, HttpServletResponse response) {
		
		String username=request.getParameter("username");
		String password=request.getParameter("password");
		User user=userService.login(username,password);
		JSONObject jsonObject = new JSONObject();  //创建Json对象
		if(user!=null){
			
			jsonObject.put("username", user.getUsername());         //设置Json对象的属性
			jsonObject.put("password", user.getPassword());
			jsonObject.put("id", user.getId());
		}
		
		
		try {
			response.getWriter().write(jsonObject.toString());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
